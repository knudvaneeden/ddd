/*
Program....: qfgenscr.s
Version....: 3.0
Author.....: Randy Wallin & Ryan Katri
Date.......: 05/02/93  09:49 pm  Last Modified: 08/30/95 @ 07:58 am
Notice.....: Copyright 1993 COB System Designs, Inc., All Rights Reserved.
Compiler...: TSE v2.5
QFRestore..: ¯1,1®
Abstract...: Creates the DEFINE WINDOW & @ SAY/GET statements for a
             drawn screen.  To use, mark the area (with a column block,
             usually) of text that the window encloses.  Then, call
             this function.  The code is written immediately below
             the text.  GET variables are preceded by a tilde (~).
             For example, a sample screen might look this this:

                 Full Name: ~name     City: ~City
                                     State: ~State


             After marking the area around the text, the resulting code
             (depending on the coordinates of the marked block and
             user input of the window name) would be:

                *** Screen Generated by Quiet Flight on 05/26/93 @ 01:17 pm
                DEFINE WINDOW Msg FROM 2, 13 TO 5, 51
                @ 0, 3 SAY "Full Name:"
                @ 0, 14 GET name
                @ 0, 24 SAY "City:"
                @ 0, 30 GET City
                @ 1, 23 SAY "State:"
                @ 1, 30 GET State
                *** End of Quiet Flight Screen Code

             Keep in mind that column blocks specify a window definition,
             while line blocks are for absolute screen coordinates.

             *** Full language support is provided through screen templates
                 defined in QF.CFG.

Changes....:
   01/31/95 - RMK: fixed problem with not recognizing a SAY at
                   the very beginning of a line if the last directive
                   on the previous line was a GET

ÛßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßÛ
Û This program is a part of a series of macros written by COB System DesignsÛ
Û for TSE/*Base users...these are not public domain but are for sale at a   Û
Û reasonable price of $69.00. Please support the work involved in writing   Û
Û these programs.                                                           Û
Û For sales information and technical support, call SEMWARE Corporation:    Û
Û                                                                           Û
Û MAIL: SemWare Corporation               FAX: (770) 640-6213               Û
Û       730 Elk Cove Court                                                  Û
Û       Kennesaw, GA  30152-4047  USA                                       Û
Û                                         InterNet: sales@semware.com       Û
Û                                                   qf.support@semware.com  Û
Û PHONE (SALES ONLY): (800) 467-3692      OTHER VOICE CALLS: (770) 641-9002 Û
Û          Inside USA, 9am-5pm ET                              9am-5pm ET   Û
ÛÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÛ
;---------------------------------------------------------------------------
; QFGenScr Screen Template: Default & FoxPro
;---------------------------------------------------------------------------
[GENSCR]

; BaseOne  = ON if screen row/columns start at base position 1, OFF otherwise
; PreCode  = Generated before the window coordinates or @ SAY/GETS
; Window   = Code to define the window name & coordinates
; Get      = @ GET statement(s)
; Say      = @ SAY statement(s)
; PostCode = Generated after everything else
;
; In addition to the internal macros defined above, the following
; additional keywords are defined:
;            ##WINTOP##     = Upper row coordinate of marked window
;            ##WINLEFT##    = Upper column coordinate of marked window
;            ##WINBOTTOM##  = Lower row coordinate of marked window
;            ##WINRIGHT##   = Lower column coordinate of marked window
;            ##ROW##        = Current Row relative to the window
;            ##COL##        = Current Column relative to the window

BaseOne=Off
PreCode=*** Screen Generated by Quiet Flight on ##DATE## @ ##TIME##
Window=DEFINE WINDOW ##Window Name## FROM ##WINTOP##, ##WINLEFT## TO ##WINBOTTOM##, ##WINRIGHT##
Say=@ ##ROW##, ##COL## SAY ##FIELD##
Get=@ ##ROW##, ##COL## GET ##FIELD##
PostCode={
*** End of Quiet Flight Screen Code

}
*/

#include ["QFMsg.inc"]
#include ["QFOption.inc"]
#include ["QFString.inc"]
#include ["QFRegExp.inc"]
#include ["QFMacros.inc"]


/* Do replacement of GenScreen-specific macros */
proc QFGenMacros(integer nTop, integer nLeft, integer nBottom, integer nRight,
              integer nRow, integer nCol, string cField)

   PushPosition()

   lReplace("##WINTOP##", format(nTop), "gn")
   lReplace("##WINLEFT##", format(nLeft), "gn")
   lReplace("##WINBOTTOM##", format(nBottom), "gn")
   lReplace("##WINRIGHT##", format(nRight), "gn")
   lReplace("##ROW##", format(nRow), "gn")
   lReplace("##COL##", format(nCol), "gn")
   lReplace("##FIELD##", cField, "gn")
   QFMacroReplace(FALSE)

   PopPosition()

end QFGenMacros


integer proc QFInsCode(string cPassPrompt)
   integer nSaveBuf, nExpandBuf
   integer lInsWhere
   string  cEndPrompt[1]

   PushBlock()
   UnMarkBlock()

   EndFile()
   // Changed on 05/21/93 by RMK
   // Allow several different starting prompts for multi-line expansions
   // in case there is a conflict in one of the prompt within an expansion
   // ie for C code, '{' is a bad choice for a starting prompt, since it
   //    is used as a block constructor
   if cPassPrompt == "{" or cPassPrompt == '[' or cPassPrompt == '('
      case cPassPrompt
         when '{'
            cEndPrompt = '}'
         when '('
            cEndPrompt = ')'
         when '['
            cEndPrompt = ']'
      endcase // cPassPrompt

      nSaveBuf = GetBufferId()
      nExpandBuf = GetGlobalInt("nExpandBuf")
      GotoBufferId(nExpandBuf)
      down()
      MarkLine()
      lFind("^\"+cEndPrompt, "x")
      up()

      GotoBufferId(nSaveBuf)
      lInsWhere = Set(InsertLineBlocksAbove, FALSE)
      CopyBlock()
      Set(InsertLineBlocksAbove, lInsWhere)

   else
      MarkChar()
      AddLine(cPassPrompt)
   endif

   PopBlock()

   return(TRUE)
end QFInsCode


proc QFGenScreen()
   integer nBlockType,
           nBeginLine,
           nBeginCol,
           nEndline,
           nEndCol,
           nwStartRow,
           nwStartCol,
           nwEndRow,
           nwEndCol,
           nOffset = 0
   integer nTempBuf, nSaveBuf, nClipID
   integer nColPos = 0, nRowPos = 0
   string  cText[100]
   string  cPhrase[200]
   integer nError = 0

   // if the area of the screen to be generated is not marked, display error
   nBlockType = isBlockInCurrFile()
   if not nBlockType
      QFMessage("You must mark the area to generate with a block", 10, FALSE)
      return()
   endif

   PushPosition()
   GotoBlockBegin()

   // Set up our window coordinates
   nBeginLine=Query(BlockBegLine)
   nBeginCol=Query(BlockBegCol)
   nEndline=Query(BlockEndLine)
   nEndCol=Query(BlockEndCol)

   nwStartRow=CurrRow()
   nwStartCol=CurrCol()
   nwEndRow=(CurrRow())+(nEndLine - nBeginLine)
   nwEndCol=CurrCol()+(nEndCol - nBeginCol)

   // If base one is specified, add the offset to row, column coordinates
   if QFGetOnOff("GENSCR", "BaseOne", nError)
      nOffset = 1
   else
      nOffset = 0
   endif // QFGetOnOff("GENSCR", "BaseOne", nError)

   nSaveBuf = GetBufferID()
   nTempBuf = CreateTempBuffer()

   // Insert the PreCode block here before anything else is done
   nError = 0
   GotoBufferID(nSaveBuf)
   cPhrase = QFGetOption("GENSCR", "PreCode", nError)
   GotoBufferID(nTempBuf)

   if not nError and length(cPhrase)
      QFInsCode(cPhrase)
      QFGenMacros(nwStartRow, nwStartCol-1, nwEndRow, nwEndCol-1,
                  nRowPos, nColPos, "")
   endif // not nError and length(cPhrase)

   // Insert the window definition if this is a column block
   if nBlockType == _COLUMN_
      nError = 0
      GotoBufferID(nSaveBuf)
      cPhrase=QFGetOption("GENSCR", "Window", nError)
      GotoBufferID(nTempBuf)
      if nError or not length(cPhrase)
         cPhrase = "DEFINE WINDOW ##Window Name## FROM ##WINTOP##, ##WINLEFT## TO ##WINBOTTOM##, ##WINRIGHT##"
      endif // nError or not len(cPhrase)

      QFInsCode(cPhrase)
      QFGenMacros(nwStartRow, nwStartCol-1+nOffset, nwEndRow, nwEndCol-1+nOffset,
                  nRowPos, nColPos, "")

   endif // nBlockType == _COLUMN_


   GotoBufferID(nSaveBuf)

   // Perform all processing of @ SAYs & @ GETs here
   while isCursorInBlock() and lFind("[~ \t]","lx")

      // Compute the relative position for @ SAY/GET
      nColPos = CurrCol() - nBeginCol + nOffset
      nRowPos = CurrLine() - nBeginLine + nOffset

      // Assume column blocks specify a window definition.
      // Therefore, subtract one from the coordinates to take
      // into account the window border.
      if nBlockType == _COLUMN_
         nColPos = nColPos - 1
         nRowPos = nRowPos - 1
      endif

      // If the leading character is a ~, then this is a GET statement
      if chr(CurrChar()) == "~"
         right()
         // ==> Don't forget to set up the wordSet (no time now!)
         cText = GetWord()

         // write the GET statement to our temporary buffer
         GotoBufferID(nTempBuf)

         nError = 0
         GotoBufferID(nSaveBuf)
         cPhrase=QFGetOption("GENSCR", "Get", nError)
         GotoBufferID(nTempBuf)
         if nError or not length(cPhrase)
            cPhrase = "@ ##ROW##, ##COL## GET ##FIELD##"
         endif // nError or not len(cPhrase)
         QFInsCode(cPhrase)
         QFGenMacros(nwStartRow, nwStartCol-1, nwEndRow, nwEndCol-1,
                     nRowPos, nColPos, cText)

         GotoBufferID(nSaveBuf)

         // Position to the first whitespace character or beginning of line
         if not lFind("[ ~\t]|^", "lx")
            GotoColumn(nEndCol + 1)
         endif
      else
         PushBlock()
         UnMarkBlock()
         MarkStream()
         GotoColumn(nEndCol)
         MarkStream()

         // Compute the end of the text to SAY--either the next GET
         // or end of line

         if lFind("\~", "ilgx")
            cText = GetText(Query(BlockBegCol), CurrPos()-Query(BlockBegCol) - 1)
         else
            cText = GetMarkedText()
            if down()
               GotoColumn(nBeginCol)
            else
               GotoColumn(nEndCol + 1)
            endif // down()
         endif // lFind("\~", "ilgx")
         cText = '"' + RTRIM(cText) + '"'

         // write the SAY statement to our temporary buffer
         GotoBufferID(nTempBuf)

         nError = 0
         GotoBufferID(nSaveBuf)
         cPhrase=QFGetOption("GENSCR", "Say", nError)
         GotoBufferID(nTempBuf)
         if nError or not length(cPhrase)
            cPhrase = "@ ##ROW##, ##COL## SAY ##FIELD##"
         endif // nError or not len(cPhrase)
         QFInsCode(cPhrase)
         QFGenMacros(nwStartRow, nwStartCol-1, nwEndRow, nwEndCol-1,
                  nRowPos, nColPos, cText)

         GotoBufferID(nSaveBuf)

         PopBlock()
      endif // chr(CurrChar()) == "~"

   endwhile // isCursorInBlock() and lFind("[~ \t]","lx")

   // Insert the PostCode block here AFTER the screen generation code
   nError = 0
   cPhrase=QFGetOption("GENSCR", "PostCode", nError)
   if not nError and length(cPhrase)
      GotoBufferID(nTempBuf)
      QFInsCode(cPhrase)
      QFGenMacros(nwStartRow, nwStartCol-1, nwEndRow, nwEndCol-1,
                  nRowPos, nColPos, "")
   endif // not nError and length(cPhrase)


   // Set the clipboard ID to our temp buffer so we can copy info easily
   nClipID = Query(ClipBoardId)
   Set(ClipBoardId,nTempBuf)

   PopPosition()

   // Write the code immediately following the "simulated" screen
   // Let the user cut & paste it from there
   GotoBlockEnd()
   AddLine()
   BegLine()
   UnMarkBlock()

   Paste()

   // Restore the original clipboard
   Set(ClipBoardId,nClipID)

   GotoBufferID(nTempBuf)
   AbandonFile()

   GotoBufferID(nSaveBuf)

end QFGenScreen


proc main()
   QFGenScreen()
end main


