// MASTER FILE: ["proj.si"]
//#pragma inhouse,chrisant

// DOMENU.SI ---------------------------------------------------------------
// Menu Functions

constant MENU_REDISPLAY = -1
constant CX_MENU_MIN = 8
//string stDiv[] = "Ý"
//string c_stDiv[] = ""
string c_stDiv2[] = ""


integer g_cposHi = 0
integer g_cxHi = 0
integer g_clnHi = 0
proc UserHiHook()
	g_cposHi = CurrPos()
	g_cxHi = Length(GetFoundText())
	g_clnHi = CurrLine()
	UpdateDisplay(_WINDOW_REFRESH_)
end


proc UserHi()
	if g_cposHi and g_clnHi == CurrLine()
		VGotoXY(g_cposHi+1, VWhereY())
		PutAttr(Query(MsgAttr), g_cxHi)
		g_cposHi = 0
		g_cxHi = 0
		g_clnHi = 0
	endif
end


integer proc isSeparator()
	return(GetText(1, 1) == "Ä")
end


string proc MenuString()
	string s[1] = iif(isSeparator(), "", " ")
	return(s+RTrim(GetToken(GetText(1, CurrLineLen()), c_stDiv, 1))+s)
end


integer proc LongestMenuString()
	integer maxlen = 0

	PushPosition()
	BegFile()
	repeat
		if not isSeparator()
			maxlen = Max(maxlen, Length(MenuString()))
		endif
	until not Down()
	PopPosition()
	return (maxlen)
end


proc MenuEnd(integer dir)
	if iif(dir, EndFile(), BegFile())
		while isSeparator() and iif(dir, Up(), Down())
		endwhile
	endif
end


proc MenuUpDn(integer dir)
	if iif(dir, Down(), Up()) and isSeparator()
		if not iif(dir, Down(), Up())
			iif(dir, Up(), Down())
		endif
	endif
end


proc MenuPgUpDn(integer dir)
	if iif(dir, PageDown(), PageUp())
		while isSeparator()
			if dir
				RollUp()
				if not Up()
					break
				endif
			else
				RollDown()
				if not Down()
					break
				endif
			endif
		endwhile
	endif
end


proc MenuEnter()
	if not isSeparator()
		EndProcess(TRUE)
	endif
end


proc MenuLeftBtn()
	case MouseHotSpot()
		when _MOUSE_CLOSE_
			// nothing
		when _MOUSE_MARKING_
			GotoMouseCursor()
			PushKey(<Enter>)
		otherwise
			ProcessHotSpot()
	endcase
end


keydef MenuKeys
<Home>					MenuEnd(FALSE)
<End>					MenuEnd(TRUE)
<Ctrl Home>				MenuEnd(FALSE)
<Ctrl End>				MenuEnd(TRUE)
<Ctrl PgUp>				MenuEnd(FALSE)
<Ctrl PgDn>				MenuEnd(TRUE)
<PgUp>					MenuPgUpDn(FALSE)
<PgDn>					MenuPgUpDn(TRUE)
<CursorUp>				MenuUpDn(FALSE)
<CursorDown>			MenuUpDn(TRUE)
<Enter>					MenuEnter()

<GreyHome>				MenuEnd(FALSE)
<GreyEnd>				MenuEnd(TRUE)
<Ctrl GreyHome>			MenuEnd(FALSE)
<Ctrl GreyEnd>			MenuEnd(TRUE)
<Ctrl GreyPgUp>			MenuEnd(FALSE)
<Ctrl GreyPgDn>			MenuEnd(TRUE)
<GreyPgUp>				MenuPgUpDn(FALSE)
<GreyPgDn>				MenuPgUpDn(TRUE)
<GreyCursorUp>			MenuUpDn(FALSE)
<GreyCursorDown>		MenuUpDn(TRUE)
<GreyEnter>				MenuEnter()

<Tab>					MenuUpDn(FALSE)
<Shift Tab>				MenuUpDn(TRUE)
<LeftBtn>				MenuLeftBtn()
end


proc DisplayMenuItem(integer fCursorline)
	integer fSep = FALSE
	integer y
	string s[80] = MenuString()
	integer hilite, len

	if isSeparator()
		s = Format("":Query(WindowCols):"Ä")
		Set(Attr, Query(MenuBorderAttr))
		fSep = TRUE
	endif

	y = VWhereY()+Query(PopWinY1)-1
	hilite = Pos(c_stDiv2, GetText(1, CurrLineLen()))
	PutLine(s, Query(WindowCols))
	if hilite and hilite+2 <= CurrLineLen()
		len = CurrChar(hilite+2)
		hilite = CurrChar(hilite+1)
		if hilite > 0 and hilite <= Length(s) and len <= Query(PopWinCols)-2
			VGotoXY(hilite+1, VWhereY())
			PutAttr(iif(fCursorline, Query(MenuSelectLtrAttr), Query(MenuTextLtrAttr)), len)
		endif
	endif

	// hilite incremental search match
	UserHi()

	Set(Attr, Query(MenuBorderAttr))
	VGotoXYAbs(Query(PopWinX1)-1, y)
	PutChar(iif(fSep, "Ã", "³"))
end


string stMenuTitle[80] = ""
proc MenuStartup()
	UnHook(MenuStartup)
	Enable(MenuKeys)

	VGotoXY(1, 0)
	Set(Attr, Query(MenuBorderAttr))
	PutStr("ÄÄÄ")
	if Length(stMenuTitle)
		Window(Query(PopWinX1)-1, Query(PopWinY1)-1,
				Query(PopWinX1)+Query(PopWinCols), Query(PopWinY1)-1)
		PutCtrStr(stMenuTitle[1:Query(PopWinCols)-2], 1)
		FullWindow()
	endif
end


integer proc DoMenu(string title)
	integer cLen
	integer cLines
	integer nMenu
	integer nBorder

	cLen = max(CX_MENU_MIN, Length(title)+2)
	cLen = max(cLen, LongestMenuString())
	cLen = min(cLen, Query(ScreenCols)-2)
	cLines = min(NumLines(), Query(ScreenRows)-2)

	// position same as how TSE positions menus
	if not Query(X1)
		Set(X1, Query(WindowX1)+(WhereX()-1)/2)
	endif
	if not Query(Y1)
		Set(Y1, Query(WindowY1)+WhereY()/2-1)
	endif
	if Query(X1)+cLen+1 > Query(ScreenCols)
		Set(X1, Query(ScreenCols)-(cLen+1))
	endif
	if Query(Y1)+cLines+2 > Query(ScreenRows)
		Set(Y1, Query(ScreenRows)-(cLines+2))
	endif

	HookDisplay(DisplayMenuItem,,,UserHiHook)

	Hook(_LIST_STARTUP_, MenuStartup)
	nBorder = Set(CurrWinBorderType, 1)
	stMenuTitle = title
	nMenu = lList("", cLen, cLines,
			_ENABLE_SEARCH_|_FIXED_WIDTH_)
	Set(CurrWinBorderType, nBorder)
	UnHook(MenuStartup)

	UnHookDisplay()

	return(nMenu)
end



