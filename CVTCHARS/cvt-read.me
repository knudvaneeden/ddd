This package contains a high-bit character conversion macro for the most
common character conversion problems. They are:

     DOS - ANSI/ISO
     DOS - HP ROMAN-8
     DOS - MACINTOSH
     ANSI/ISO - MACINTOSH

 As long as you are using DOS based TSE, it is unlikely you will need a
 converter for ANSI - HP ROMAN-8.

INTRODUCTION: BASICS OF THE PROBLEM AT HAND.

 The printable characters (as well as the non-printing control characters)
 that correspond to the available combinations in seven bits were
 established early in the history of electronic text transmission, and have
 been kept largely unchanged in character set standards worldwide, with only
 minor differences in a few positions (such as the monetary unit (dollar)
 sign, for example). This is the basic ASCII character set. As long as you
 are using only the characters found printed on the keytops of the American
 keyboard, you will never need these macros.

 The problem starts when you get into the extensions of this basic ASCII set
 in order to be able to use additional characters. There simply are not
 enough combinations available to assign one to every character that
 everyone wants to be able to use, and several mappings were designed and
 in place before standardization came around.

THE MACRO:

 Because I work with translations and also try to support several platforms
 of my customers, I have had to create these macros to convert from one
 character set to another, and make them available to you for your use. Not
 all of them are thouroughly tested, however. They been used a few times
 without problems, but I would appreciate knowing about whatever problems
 you run into.

 Because each character set is different, the conversion macros are only
 able to convert those characters that exist in common in the different
 sets. By definition, not all of the characters can be converted. Still,
 the most commonly used ones can be converted, and therefore the conversion
 macros are useful.

 Originally I had a separate macro for each character set pair, which I have
 combined into one macro with the shared routines separated from the set -
 specific portion.

I have included in the macro the following functionality:

     On invoking the macro (with the keystroke) a menu is presented with the
     following options:

          Need Conversion?      // Are there any high-bit chars?
          Choice of conversions
                     SET-A to SET-B
                     SET-B to SET-A
                      -- etc --

     On choosing a conversion set, the following options are presented:

          Go to Unconvertible characters
          Do Conversion

     The GO TO UNCONVERTIBLE characters option gives a count of the
     unconvertible characters and sets up a Find(), so that you may use
     RepeatFind to continue from one to another. This option is to allow you
     to modify your file before trying to run the conversion on it. Simply
     Exit the menu by pressing <Escape> in order to do this, and start the
     macro again when you are ready to return to the conversion process.

     Thanks to David Guyer for solving a bug introduced by a very simple
     oversight.

     The DO CONVERSION option will test for being in a block, and if so
     convert only the block. If not, it will prompt before going ahead and
     converting the entire file. This is just in case you thought you had
     the cursor in a block,

     NOTE: it will allow conversion of the entire file if the cursor is
     outside of a marked block.

THE CHARACTER SETS:

 DOS: The one you're probably most familiar with. Contains all of the most
 commonly used accents for most European Languages and an extensive set of
 box draw characters. The box draw characters do not exist in the other
 character sets represented here.

 ANSI/ISO: This is what you'll get if you're using a Windows Word processor.
 If you want to prepare a generic file for a Windows Word processor, you'll
 want to run this. You'll also want to run a macro to convert paragraphs to
 single lines, the way Word Processors read them. There is a set of macros
 for this purpose in my DOCMODE package, previously uploaded to the Semware
 board, and I include a single (blank line delimited) paragraph at a time
 version in this package just in case you need it.

 This is also the conversion set you'll need if you're exchanging files with
 a Linux machine. (BTW, TSE runs well in Linux's DOS Emulator.)

 HP ROMAN-8: This is the default character set on a HP Laser Jet printer.
 You can use the DOS set (PC-8 in the HP manual) by adding "<Esc>(10U"
 (without the quotes, and convert "<Esc>" to the Escape Character) to the
 beginning of the file, but your font choices are limited to Courier 10 or
 12 c.p.i. and LinePrinter 16.67 c.p.i.  If you want to use the proportional
 fonts, you'll have to convert. If you want to use upper case accents or the
 few accents that can't be found in the DOS set, you can use the chart found
 in the HP manual to enter them by their codes, and they'll print right even
 though they'll look wrong on your screen. Run the conversion first, then
 add these in, so as not to accidentally change them to something you don't
 want.

 MACINTOSH: Self-explanatory. This is the one that I have tested the least.
 I was unable to get any real information from Mac technical support
 sources, so I used files produced by a conversion utility as a basis. I
 don't know if the control-Z is necessary, but the conversion utility added
 it, so I have gone ahead and done so, too. So far I've had no complaints,
 but let me know if anything needs to be changed.

FILES IN THIS PACKAGE:
     CVT-READ.ME    This file
     CVTCHARS.S     Source for the conversion macro
     CVTCHARS.MAC   The macro compiled
     UNWRAP.S       Source for paragraph unwrapper
                         (Unwraps from current line line to next blank line)
     UNWRAP.MAC     Paragraph unwrapper compiled

KEYSTROKES TO INVOKE: Reset these to your liking and recompile. In the
     pre-compiled macros included they are:
     ^K_F5 for CVTCHARS,  and
     ^@B   for UNWRAP.

